"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tsquery_1 = require("@phenomnomnominal/tsquery");
const translation_collection_1 = require("../utils/translation.collection");
const ast_helpers_1 = require("../utils/ast-helpers");
const TRANSLATE_SERVICE_TYPE_REFERENCE = 'TranslateService';
const TRANSLATE_SERVICE_METHOD_NAMES = ['get', 'instant', 'stream'];
class ServiceParser {
    extract(source, filePath) {
        const sourceFile = tsquery_1.tsquery.ast(source, filePath);
        const classNodes = ast_helpers_1.findClasses(sourceFile);
        if (!classNodes) {
            return;
        }
        let collection = new translation_collection_1.TranslationCollection();
        classNodes.forEach(classNode => {
            const propName = ast_helpers_1.findClassPropertyByType(classNode, TRANSLATE_SERVICE_TYPE_REFERENCE);
            if (!propName) {
                return;
            }
            const callNodes = ast_helpers_1.findMethodCallExpressions(classNode, propName, TRANSLATE_SERVICE_METHOD_NAMES);
            callNodes.forEach(callNode => {
                const [firstArgNode] = callNode.arguments;
                if (!firstArgNode) {
                    return;
                }
                const strings = ast_helpers_1.getStringsFromExpression(firstArgNode);
                collection = collection.addKeys(strings);
            });
        });
        return collection;
    }
}
exports.ServiceParser = ServiceParser;
//# sourceMappingURL=service.parser.js.map